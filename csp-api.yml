---
AWSTemplateFormatVersion: "2010-09-09"
Description: "My API Gateway and Lambda function"

# hat tip:
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-domainname.html
# https://gist.github.com/magnetikonline/c314952045eee8e8375b82bc7ec68e88
# https://github.com/awslabs/route53-dynamic-dns-with-lambda/blob/master/route53-ddns.yml

Parameters:
  basePath:
    Description: "Base path of the API (the portion of the URL coming after the domain)"
    Type: String
    Default: csp-report

  domainName:
    Description: "Domain name that will be used to call the API"
    Type: String
    Default: dockstore-security.org

  restApiName:
    Description: "The name of the CSP reporting API"
    Type: String
    Default: "dockstore-csp-api"

  lambdaName:
    Description: "The name of the CSP reporting lambda function"
    Type: String
    Default: "dockstore-csp-lambda"

  acmCertificateArn:
    Description: "The ARN of the ACM Certificate for domainName."
    Default: 'arn:aws:acm:us-east-1:635220370222:certificate/35a87509-1d0c-41cd-b91a-79dae65cd3a8'
    Type: String


Resources:
  cspDomainName:
    Type: 'AWS::ApiGateway::DomainName'
    Properties:
      DomainName: !Sub domainName
      EndpointConfiguration:
        Types:
          - REGIONAL
      CertificateArn: !Sub acmCertificateArn
      RegionalCertificateArn: !Sub acmCertificateArn
      SecurityPolicy: TLS_1_2

  cspRestApi:
    Type: 'AWS::ApiGateway::RestApi'
    Properties:
      Name: !Sub restApiName
      Description: "Dockstore CSP Rest API"

  cspMethod:
    Type: "AWS::ApiGateway::Method"
    Properties:
      AuthorizationType: "NONE"
      HttpMethod: "POST"
      Integration:
        IntegrationHttpMethod: "POST"
        Type: "AWS_PROXY"
        Uri: !Sub
          - "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${lambdaArn}/invocations"
          - lambdaArn: !GetAtt "cspLambda.Arn"

  cspDeployment:
    Type: "AWS::ApiGateway::Deployment"
    DependsOn:
      - "cspMethod"
    Properties:
      StageName: !Sub basePath
      RestApiId: !Ref cspRestApi

  cspBasePathMapping:
    Type: 'AWS::ApiGateway::BasePathMapping'
    Properties:
      BasePath: !Sub basePath
      DomainName: !Sub domainName
      RestApiId: !Ref cspRestApi

  cspLambda:
    Type: "AWS::Lambda::Function"
    Properties:
      Description: "Dockstore CSP lambda function to filter and log reports"
      FunctionName: !Ref "lambdaName"
      Handler: "index.lambda_handler"
      MemorySize: 128
      Role: !GetAtt "cspLambdaIamRole.Arn"
      Runtime: "python3.7"
      Timeout: 10
      Code:
        ZipFile: |
          import json
          # Dockstore CSP Reporting: CloudWatch Logger Lambda
          # This lambda function listens for CSP reports arriving at dockstore-security.org,
          # processes the JSON payload, filters reports, and logs CSP reports to CloudWatch.
          def lambda_handler(event, context):
              # Log messages, then return success status
              payload = json.loads(event['body'])
              print(json.dumps(payload, sort_keys=True, default=str))
              return {
                  'statusCode': 200,
                  'headers': {'Content-Type': 'text/plain'},
                  'body': 'success'
              }

  cspLambdaIamRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action:
              - "sts:AssumeRole"
            Effect: "Allow"
            Principal:
              Service:
                - "lambda.amazonaws.com"
      Policies:
        - PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Action:
                  - "logs:CreateLogGroup"
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                Effect: "Allow"
                Resource:
                  - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/${lambdaName}:*"
          PolicyName: "lambda"

  lambdaLogGroup:
    Type: "AWS::Logs::LogGroup"
    Properties:
      LogGroupName: !Sub "/aws/lambda/${lambdaName}"
      RetentionInDays: 90

Outputs:
  apiGatewayInvokeURL:
    Value: !Sub "https://${apiGateway}.execute-api.${AWS::Region}.amazonaws.com/${apiGatewayStageName}"
  lambdaArn:
    Value: !GetAtt "cspLambda.Arn"
